" Specify a directory for plugins
silent! if plug#begin('~/.vim/plugged')

" ----------------------------------------------------------------------------
" Integrations
" ----------------------------------------------------------------------------
" Git plugin
Plug 'tpope/vim-fugitive'
" A git commit browser.
Plug 'junegunn/gv.vim'

" ----------------------------------------------------------------------------
" Language support
" ----------------------------------------------------------------------------
Plug 'vim-ruby/vim-ruby'
" This adds #{} in surround
" this means that we can select text and use S# to interpolate selection
Plug 'p0deje/vim-ruby-interpolation', {'for': 'ruby'}
" use ar (external) and ir (internal) to select blocks in visual mode
Plug 'nelstrom/vim-textobj-rubyblock', {'for': 'ruby'} " depends: vim-textobj-user
Plug 'tpope/vim-endwise', {'for': 'ruby'}

" ----------------------------------------------------------------------------
" Navigation
" ----------------------------------------------------------------------------
" file navigation
Plug 'ctrlpvim/ctrlp.vim'
" Improves search experience
Plug 'junegunn/vim-slash'
" Automatically change root directory
Plug 'airblade/vim-rooter'

" ----------------------------------------------------------------------------
" Edit Steroids
" ----------------------------------------------------------------------------
Plug 'kana/vim-textobj-user'
Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
" use cs<DEL1><DEL2>
Plug 'tpope/vim-surround'
" use gcc or gc in visual mode to comment
Plug 'tpope/vim-commentary', { 'on': '<Plug>Commentary' }
Plug 'vim-scripts/DeleteTrailingWhitespace'
" gS split one-liner into multiple lines
" gJ (with the cursor on the first line of the block) join a block
Plug 'AndrewRadev/splitjoin.vim'
Plug 'mattn/sonictemplate-vim'
" Add matching pairs [], (), etc
Plug 'jiangmiao/auto-pairs'
" Abbreviation, substitution and coercion
Plug 'tpope/tpope-vim-abolish'
" autocomplete
Plug 'lifepillar/vim-mucomplete'
" snipmate dependencies
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
" snipmate engine
Plug 'garbas/vim-snipmate'
" some useful snippets
Plug 'honza/vim-snippets'

" ----------------------------------------------------------------------------
" Linters, testers
" ----------------------------------------------------------------------------
Plug 'tpope/vim-dispatch'
" A Vim wrapper for running tests on different granularities
Plug 'janko-m/vim-test'
" adds several useful mappings with ([|])<sequence> pattern
" [b or ]b to map buffer navigation
" [e or ]e to exchange lines
" [u ]u encode and decode url
" [f ]f next/previous file
" [n ]n navigate conflicts in SCM
Plug 'tpope/vim-unimpaired'
" async linter, works only on vim8 or neovim
Plug 'w0rp/ale'

" ----------------------------------------------------------------------------
" Vim improved
" ----------------------------------------------------------------------------
Plug 'tpope/vim-repeat'
" Display, place and toggle marks
Plug 'kshenoy/vim-signature'
" Improve clipboard feature
Plug 'svermeulen/vim-easyclip'

" ----------------------------------------------------------------------------
" UI
" ----------------------------------------------------------------------------
" Provides a fancy start screen
Plug 'mhinz/vim-startify'
" Improved statusline for vim
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
endif
