" Specify a directory for plugins
silent! if plug#begin('~/.vim/plugged')

" ----------------------------------------------------------------------------
" Integrations
" ----------------------------------------------------------------------------
" Git plugin
Plug 'tpope/vim-fugitive'
" Git branch managment
Plug 'idanarye/vim-merginal'
" A git commit browser.
Plug 'junegunn/gv.vim'

" ----------------------------------------------------------------------------
" Language support
" ----------------------------------------------------------------------------
Plug 'sheerun/vim-polyglot'

" ----------------------------------------------------------------------------
" Navigation
" ----------------------------------------------------------------------------
" file navigation
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
" Improves search experience
Plug 'junegunn/vim-slash'
" Automatically change root directory
Plug 'airblade/vim-rooter'
" Browsing
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
" Pane navigation
Plug 'christoomey/vim-tmux-navigator'

" ----------------------------------------------------------------------------
" Edit Steroids
" ----------------------------------------------------------------------------
Plug 'kana/vim-textobj-user'
Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }
" use cs<DEL1><DEL2>
Plug 'tpope/vim-surround'
" use gcc or gc in visual mode to comment
Plug 'tpope/vim-commentary', { 'on': '<Plug>Commentary' }
Plug 'vim-scripts/DeleteTrailingWhitespace'
" gS split one-liner into multiple lines
" gJ (with the cursor on the first line of the block) join a block
Plug 'AndrewRadev/splitjoin.vim'
Plug 'mattn/sonictemplate-vim'
" Add matching pairs [], (), etc
Plug 'jiangmiao/auto-pairs'
" Abbreviation, substitution and coercion
Plug 'tpope/tpope-vim-abolish'
" autocomplete
Plug 'lifepillar/vim-mucomplete'
" snippets engine
Plug 'SirVer/ultisnips'
" some useful snippets
Plug 'honza/vim-snippets'

" ----------------------------------------------------------------------------
" Linters, testers
" ----------------------------------------------------------------------------
Plug 'tpope/vim-dispatch'
" A Vim wrapper for running tests on different granularities
Plug 'janko-m/vim-test'
" adds several useful mappings with ([|])<sequence> pattern
" [b or ]b to map buffer navigation
" [e or ]e to exchange lines
" [u ]u encode and decode url
" [f ]f next/previous file
" [n ]n navigate conflicts in SCM
Plug 'tpope/vim-unimpaired'
" async linter, works only on vim8 or neovim
if g:has_async
  Plug 'w0rp/ale'
else
  echoerr "Ale is not being load as it requires vim>8 or neovim"
endif

" ----------------------------------------------------------------------------
" Vim improved
" ----------------------------------------------------------------------------
Plug 'tpope/vim-repeat'
" Display, place and toggle marks
Plug 'kshenoy/vim-signature'
" Improve clipboard feature
Plug 'svermeulen/vim-easyclip'
" Create any non-existent directory before writing the buffer
Plug 'pbrisbin/vim-mkdir'
" Vim sugar for the UNIX shell commands that need it the most
Plug 'tpope/vim-eunuch'

" ----------------------------------------------------------------------------
" UI
" ----------------------------------------------------------------------------
" Provides a fancy start screen
Plug 'mhinz/vim-startify'
" Improved statusline for vim
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
endif
